[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "timecraft_ai"
version = "1.2.0"
requires-python = ">=3.12"
authors = [
    { name = "Rafael Mori", email = "faelmori@gmail.com" }
]
maintainers = [
    { name = "Rafael Mori", email = "faelmori@gmail.com" }
]
description = "Time series analysis and AI-powered forecasting with voice interactions"
readme = "README.md"
license = { text = "MIT" }
keywords = [
    "time-series", 
    "forecasting", 
    "database", 
    "automation", 
    "ai", 
    "voice", 
    "chatbot", 
    "data-analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Core dependencies (always required)
dependencies = [
    "click>=8.0.0",
    "mypy>=1.0.0",
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "pandas-stubs>=1.5.0.11",
    "matplotlib>=3.4.0",
    "scikit-learn>=1.0.0",
    "requests>=2.25.0",
    "plotly>=5.0.0",
    "prophet>=1.0.0",
    "sqlalchemy>=1.4.0",
    "fastmcp>=1.0",
    "cx-oracle>=8.3.0",
    "aiohttp>=3.12.14",
    "dotenv>=0.9.9",
    "vosk>=0.3.45",
    "pyaudio>=0.2.14",
    "fastapi>=0.116.1",
    "pyttsx3>=2.99",
    "flask>=3.1.1",
    "psycopg2>=2.9.10",
    "pymongo>=4.13.2",
    "pyodbc>=4.0.0",
    "pymssql>=2.2.0",
    "uvicorn[standard]>=0.22.0",
    "pydantic>=2.7.0",
    "mysql-connector>=2.2.9",
    "mysql-connector-python>=9.3.0",
    "pygame>=2.6.1",
    "piper>=0.14.4",
    "piper-tts>=1.3.0",
    "aiohttp-cors>=0.8.1",
]

[project.optional-dependencies]
# Database connectors
database = [
    "sqlalchemy>=1.4.0",
    "pymongo>=4.0.0",
    "mysql-connector-python>=8.0.0",
]
mcp = [
    "mcp==1.4.1",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "fastmcp>=1.0",
]
oracle = ["cx_Oracle>=8.0.0"]
mssql = ["pyodbc>=4.0.0", "pymssql>=2.2.0"]
postgres = ["psycopg2-binary>=2.9.0"]

# Machine Learning and Forecasting
ml = [
    "prophet>=1.1.0",
    "xarray>=0.20.0",
]

# Visualization
viz = [
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "kaleido>=0.2.0",
]

# Web APIs
web = [
    "flask>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "pydantic>=2.0.0",
]

# AI and Voice features
ai = [
    "vosk>=0.3.30",
    "pyaudio>=0.2.11",
    "pyttsx3>=2.90",
    "pvporcupine>=3.0.0",
    "soundfile>=0.12.0",
    # "playsound>=1.2.2",
    "piper>=0.1.0",
    "pyttsx3>=2.90",
    "pygame>=2.0.0",
    # "speech_recognition>=3.8.1",
]

# Development tools
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

# Documentation
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.0.0",
    "mkdocstrings[python]>=0.19.0",
]

# Complete installation with all features
all = [
    "timecraft_ai"
]

[project.urls]
Homepage = "https://github.com/rafa-mori/timecraft"
Documentation = "https://github.com/rafa-mori/timecraft/docs"
Repository = "https://github.com/rafa-mori/timecraft"
"Bug Tracker" = "https://github.com/rafa-mori/timecraft/issues"
Changelog = "https://github.com/rafa-mori/timecraft/blob/main/CHANGELOG.md"

[project.scripts]
timecraft = "timecraft_ai:main"
timecraft-ai = "timecraft_ai:main"

[tool.hatch.build.targets.wheel]
packages = ["timecraft_ai"]

[tool.hatch.build.targets.sdist]
include = [
    "/timecraft_ai",
    "/README.md", 
    "/LICENSE",
    "/CHANGELOG.md",
    "/NOTICE.md",
    "/CONTRIBUTING.md",
    "/AUTHORS.md",
    "/SECURITY.md",
    "/SUPPORT.md",
    "/docs/INSTALL.md",
    "/docs/INSTALL_AI.md"
]

[tool.hatch.version]
path = "timecraft_ai/__init__.py"

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

# Linting configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[[tool.mypy.overrides]]
module = ["untyped_package.*"]
follow_untyped_imports = true
