WITH EST AS (
    SELECT 
        P.CODPROD,
        SUM(E.ESTOQUE) AS ESTOQUE,
        SUM(E.RESERVADO) AS RESERVADO,
        (SUM(E.ESTOQUE) - SUM(E.RESERVADO)) AS SALDO
    FROM
        TGFPRO P
    INNER JOIN
        TGFEST E ON P.CODPROD = E.CODPROD
    WHERE
        P.USOPROD = 'R'
    GROUP BY
        P.CODPROD
),
LAST_PURCHASE_BEFORE_PARAM AS (
    SELECT
        I.CODPROD,
        MAX(C.DTNEG) AS DTNEG
    FROM
        TGFCAB C
    INNER JOIN
        TGFITE I ON C.NUNOTA = I.NUNOTA
    WHERE
        C.DTNEG < DATE '2022-06-01'
        AND C.TIPMOV = 'C'
    GROUP BY
        I.CODPROD
),
MOV_A AS (
    SELECT
        C.DTNEG,
        I.CODPROD,
        SUM(CASE WHEN C.TIPMOV = 'C' THEN I.QTDNEG ELSE 0 END) AS ENTRADA,
        SUM(CASE WHEN C.TIPMOV = 'V' THEN I.QTDNEG ELSE 0 END) AS SAIDA
    FROM
        TGFCAB C
    INNER JOIN
        TGFITE I ON C.NUNOTA = I.NUNOTA
    INNER JOIN
        LAST_PURCHASE_BEFORE_PARAM L ON I.CODPROD = L.CODPROD
    WHERE
        C.DTNEG >= L.DTNEG
    GROUP BY
        C.DTNEG, I.CODPROD
),
MOV_B AS (
    SELECT
        A.DTNEG,
        A.CODPROD,
        A.ENTRADA,
        A.SAIDA,
        SUM(A.ENTRADA - A.SAIDA) OVER (
            PARTITION BY A.CODPROD 
            ORDER BY A.DTNEG 
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
        ) AS SALDO_ATUAL
    FROM
        MOV_A A
),
MOV_C AS (
    SELECT
        B.DTNEG,
        B.CODPROD,
        B.ENTRADA,
        B.SAIDA,
        B.SALDO_ATUAL,
        E.SALDO AS INVENTARIO
    FROM
        MOV_B B
    INNER JOIN
        EST E ON B.CODPROD = E.CODPROD
),
MOVIMENTACAO AS (
    SELECT
        C.DTNEG,
        C.CODPROD,
        C.ENTRADA,
        C.SAIDA,
        C.SALDO_ATUAL,
        C.INVENTARIO
    FROM
        MOV_C C
),
LAST_MOV AS (
    SELECT
        M.CODPROD,
        MAX(M.DTNEG) AS DTNEG
    FROM
        MOVIMENTACAO M
    GROUP BY
        M.CODPROD
),
EXPECTED_QTY AS (
    SELECT
        M.CODPROD,
        M.DTNEG,
        M.ENTRADA,
        M.SAIDA,
        M.SALDO_ATUAL,
        M.INVENTARIO
    FROM
        MOVIMENTACAO M
    LEFT JOIN
        LAST_MOV L ON M.CODPROD = L.CODPROD
    WHERE
        M.DTNEG = L.DTNEG
),
CALCULATED_QTY AS (
    SELECT
        MOVIMENTACAO.DTNEG,
        MOVIMENTACAO.CODPROD,
        MOVIMENTACAO.ENTRADA,
        MOVIMENTACAO.SAIDA,
        MOVIMENTACAO.INVENTARIO,
        SUM(MOVIMENTACAO.ENTRADA - MOVIMENTACAO.SAIDA) OVER (
            PARTITION BY MOVIMENTACAO.CODPROD 
            ORDER BY MOVIMENTACAO.DTNEG 
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
        ) AS SALDO_ATUAL
    FROM
        MOVIMENTACAO
    ORDER BY
        MOVIMENTACAO.CODPROD,
        MOVIMENTACAO.DTNEG
),
CONSOLIDADO AS (
    SELECT
        CQ.CODPROD,
        CQ.DTNEG,
        CQ.SALDO_ATUAL AS SALDO_HISTORICO,
        EQ.SALDO_ATUAL AS SALDO_CALCULADO,
        EQ.INVENTARIO AS INVENTARIO_ATUAL
    FROM
        CALCULATED_QTY CQ
    INNER JOIN
        EXPECTED_QTY EQ ON CQ.CODPROD = EQ.CODPROD
    ORDER BY
        CQ.CODPROD, CQ.DTNEG
),
PROD_REPORT AS (
    SELECT
        C.CODPROD,
        COUNT(*) AS QTD_REGISTROS
    FROM
        CONSOLIDADO C
    GROUP BY
        C.CODPROD
)
SELECT
    C.DTNEG,
    C.CODPROD,
    C.SALDO_HISTORICO,
    C.SALDO_CALCULADO,
    C.INVENTARIO_ATUAL
FROM
    CONSOLIDADO C
WHERE
    C.CODPROD = {{ product_id }}
ORDER BY
    C.DTNEG ASC;
